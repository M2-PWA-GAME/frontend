  @using frontend.Model
  
    
<div class="inputGroup">
    @if (@isInForm == true)
    {
        <InputText type="@type" @bind-Value="inputValue"/>   
    }

    @if (@isInForm == false)
    {
        <input type="@type" @bind-value="inputValue"/>   
    }     
    <label>@label</label>
</div>

@code {

    private String _inputValue;

    [Parameter]
    public String inputValue
    {
        get => _inputValue;
        set
        {
            if (_inputValue == value ) return;
            _inputValue = value;
            InputValueChanged.InvokeAsync(value);
        }
    }

    [Parameter]
    public EventCallback<String> InputValueChanged { get; set; }

    [Parameter]
    public Boolean isInForm {get; set;} = false;

    [Parameter]
    public String label { get; set; }


    [Parameter]
    public String type { get; set; } = "text";

}
<style>
/* form starting stylings ------------------------------- */
.inputGroup { 
  position:relative; 
  margin-bottom:45px;
}
.inputGroup input {
  font-size:18px;
  padding:10px 10px 10px 5px;
  display:block;
  width: calc(100% - 15px);
  border:none;
  border-bottom:1px solid #F4B149;
}
.inputGroup input:focus {
    outline:none;
}
/* LABEL ======================================= */
.inputGroup label 				 
{
  font-size:18px;
  font-weight:normal;
  position:absolute;
  pointer-events:none;
  left:5px;
  top:10px;
  transition:0.2s ease all; 
  -moz-transition:0.2s ease all; 
  -webkit-transition:0.2s ease all;
}

/* active state */
.inputGroup input:focus ~ label, .inputGroup input:valid ~ label 		
{
  top:-20px;
  font-size:14px;
}
</style>