@using frontend.Model
@using frontend.Model.Game
@using frontend.Service.Implementation

<div class="tile" @onclick="() => GameController.TileClick(ActualTile)">
    <div class="hover" style="background-color: @ActualTile.HoverColor; opacity: 0.5">
    </div>
    <div class="object">
        @if (!string.IsNullOrWhiteSpace(ActualTile.ObjectImage))
        {
            <img alt="Object image" src="@ActualTile.ObjectImage" style="margin-top: -8px"/>
        }
    </div>
    <div class="floor">
        <img alt="Map image" src="@ActualTile.MapImage" style="margin-top: -8px" />
    </div>
</div>

@code {

    [Parameter]
    public int X { get; set; }

    [Parameter]
    public int Y { get; set; }

    [Parameter]
    public TileModel ActualTile { get; set; }

    [Parameter]
    public GameController GameController { get; set; }

    /// <summary>
    /// Method invoked when the component is ready to start, having received its
    /// initial parameters from its parent in the render tree.
    /// </summary>
    protected override void OnInitialized()
    {
        if (GameController != null)
        {
            GameController.RefreshRequested += Game_OnRefreshRequested;
        }
    }

    private void Game_OnRefreshRequested()
    {
        StateHasChanged();
    }

}